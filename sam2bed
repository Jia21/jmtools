#!/usr/bin/perl -w

use warnings;
use strict;
use File::Basename;
use Getopt::Long;
use Pod::Usage;

=head1 NAME

sam2bed

=head1 SYNOPSIS

 sam2bed <sam> > file.bed
 
   
  Convert sam to bed file with the 4th col the ID and sequence of the read separated by "#"
  
  output is:
  chr	start(0based)	end(1based)	ID#sequence 
                
  
  Example:
     sam2bed file.sam > file.bed
  
=head1 DESCRIPTION

=cut

#option variables
my $help;

#initialize options
Getopt::Long::Configure ('bundling');

if(!GetOptions ('h'=>\$help) || scalar(@ARGV)!=1)
{
    if ($help)
    {
        pod2usage(-verbose => 2);
    }
    else
    {
        pod2usage(1);
    }
}

## input file
my $fn = shift;


my %iupac2code = (
                  'A' => 1,
                  'C' => 2,
                  'G' => 4,
                  'T' => 8,
                  'R' => 1|4,
                  'Y' => 2|8,
                  'S' => 2|4,
                  'W' => 1|8,
                  'K' => 4|8,
                  'M' => 1|2,
                  'B' => 2|4|8,
                  'D' => 1|4|8,
                  'H' => 1|2|8,
                  'V' => 1|2|4,
                  'N' => 1|2|4|8,
                  );


my %code2iupac = (
                  1 => 'A',
                  2 => 'C',
                  4 => 'G',
                  8 => 'T',
                  1|4 => 'R',
                  2|8 => 'Y',
                  2|4 => 'S',
                  1|8 => 'W',
                  4|8 => 'K',
                  1|2 => 'M',
                  2|4|8 => 'B',
                  1|4|8 => 'D',
                  1|2|8 => 'H',
                  1|2|4 => 'V',
                  1|2|4|8 => 'N',
    );


## variables
my $fh; 
my $header_processed = 0;
my %sample2index;

## read in file
open($fh, "<$fn") || die "cannot open the file $fn!";
while (my $l = <$fh>) {
    chomp($l);
		
		## skip sam header
    next if ($l =~ /^\@/);
    
    ## non header
    my @t = split("\t", $l);
    
    ## skip if no chromosome
    next if ($t[2] eq "*");
		
		## chromosome
		my $chr = $t[2];
		
		## length of sequence
		my $len = length($t[9]);
		
		## pos
		my $sta = $t[3] - 1;
		my $end = $sta + $len;
		
		## ID
		my $id = $t[0];
		
		## sequence
		my $seq = $t[9];
		
		## output
		print "$chr\t$sta\t$end\t$id#$seq\n";
}


###########################################################################################
## subroutines
###########################################################################################

